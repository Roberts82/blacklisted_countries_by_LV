valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, ".$", 2)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, "", 2)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+).", 2)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, ".$", 2)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
# valstis2020 <- str_split_fixed(valstis2020, " ", 2)
valstis2020$numbers <- gsub([^0-9.]", "", valstis2020$text)
# Define the URL to scrape
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
# valstis2020 <- str_split_fixed(valstis2020, " ", 2)
valstis2020$numbers <- gsub("[^0-9.]", "", valstis2020$text)
valstis2020$numbers <- gsub("[0-9]+)\\.([0-9]+).", "", valstis2020$text)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- as.Data.frame(valstis2020[3:14])
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- as.data.frame(valstis2020[3:14])
valstis2020$numbers <- gsub("[0-9]+)\\.([0-9]+).", "", valstis2020$text)
View(valstis2020)
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- as.data.frame(valstis2020[3:14])
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+).", 2)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- as.data.frame(valstis2020[3:14])
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+)\\.", 2)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+)\\.", 2)
View(valstis2020)
?str_split_fixed
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
# valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+)\\.", 2)
# extract numbers from the second part of the split string
my_numbers <- gsub("[^0-9.]", "", valstis2020[, 2])
# Define the URL to scrape
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
# valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+)\\.", 2)
# extract numbers from the second part of the split string
my_numbers <- gsub("[^0-9.0-9.]", "", valstis2020[, 2])
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# split into 2 columns based on space
# valstis2020 <- str_split_fixed(valstis2020, "^([0-9]+)\\.([0-9]+)\\.", 2)
# extract numbers from the second part of the split string
my_numbers <- gsub("[^0-9.0-9.]", "", valstis2020)
my_text <- gsub("[a-z]", "", valstis2020)
my_text <- gsub("[:alpha:]", "", valstis2020)
my_text <- gsub("![^0-9.0-9.]", "", valstis2020)
my_text <- gsub(!"[^0-9.0-9.]", "", valstis2020)
my_text <- gsub(!"[^0-9.0-9.]", "", valstis2020)
remove(my_text, my_numbers)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# use gsub() to add a space after the second dot
my_modified_string <- gsub("(\\..*\\.)(.*)", "\\1 \\2", valstis2020)
remove(my_modified_string)
valstis2020 <- gsub("(\\..*\\.)(.*)", "\\1 \\2", valstis2020)
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, " ", 2)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# use gsub() to add a space after the second dot
valstis2020 <- gsub("(\\..*\\.)(.*)", "\\1 \\2", valstis2020)
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, " ", 2)
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:15]
# use gsub() to add a space after the second dot
valstis2020 <- gsub("(\\..*\\.)(.*)", "\\1 \\2", valstis2020)
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, " ", 2)
# extract numbers from the second part of the split string
# my_numbers <- gsub("[^0-9.0-9.]", "", valstis2020)
#
# my_text <- gsub("[^0-9.0-9.]", "", valstis2020)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
url3 <- "https://m.likumi.lv/doc.php?id=319726"
# Use rvest to scrape the website and extract the relevant text
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# use gsub() to add a space after the second dot
valstis2020 <- gsub("(\\..*\\.)(.*;|*.)", "\\1 \\2", valstis2020)
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, " ", 2)
# extract numbers from the second part of the split string
# my_numbers <- gsub("[^0-9.0-9.]", "", valstis2020)
#
# my_text <- gsub("[^0-9.0-9.]", "", valstis2020)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
view(valstis2020)
valstis2022_1 <- valstis2020 %>%
filter(!pkt.2020 %in% c("2.1.", "2.5.", "2.10."))
view(valstis2022_1)
# Define the URL to scrape
url4 <- "https://m.likumi.lv/doc.php?id=338298"
# Use rvest to scrape the website and extract the relevant text
webpage4 <- read_html(url4)
text4 <- webpage4 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text4)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2022_2 <- str_extract_all(text4, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2022_2 <- valstis2022_2[3:14]
# split into 2 columns based on space
valstis2022_2 <- str_split_fixed(valstis2022_2, " ", 2)
# assign new column names
valstis2022_2 <- `colnames<-`(valstis2022_2, c("pkt.2020", "teritorija"))
valstis2022_2 <- as.data.frame(valstis2022_2)
view(valstis2022_2)
url4 <- "https://m.likumi.lv/doc.php?id=338298"
# Use rvest to scrape the website and extract the relevant text
webpage4 <- read_html(url4)
text4 <- webpage4 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text4)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2022_2 <- str_extract_all(text4, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2022_2 <- valstis2022_2[6:18]
# split into 2 columns based on space
valstis2022_2 <- str_split_fixed(valstis2022_2, " ", 2)
# assign new column names
valstis2022_2 <- `colnames<-`(valstis2022_2, c("pkt.2020", "teritorija"))
valstis2022_2 <- as.data.frame(valstis2022_2)
view(valstis2022_2)
url4 <- "https://m.likumi.lv/doc.php?id=338298"
# Use rvest to scrape the website and extract the relevant text
webpage4 <- read_html(url4)
text4 <- webpage4 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text4)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2022_2 <- str_extract_all(text4, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2022_2 <- valstis2022_2[7:18]
# split into 2 columns based on space
valstis2022_2 <- str_split_fixed(valstis2022_2, " ", 2)
# assign new column names
valstis2022_2 <- `colnames<-`(valstis2022_2, c("pkt.2020", "teritorija"))
valstis2022_2 <- as.data.frame(valstis2022_2)
view(valstis2022_2)
str_remove_all(valstis2022_2$teritorija, ";|.")
str_remove_all(valstis2022_2$teritorija, ";")
webpage4 <- read_html(url4)
text4 <- webpage4 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text4)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2022_2 <- str_extract_all(text4, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2022_2 <- valstis2022_2[7:18]
# split into 2 columns based on space
valstis2022_2 <- str_split_fixed(valstis2022_2, " ", 2)
# assign new column names
valstis2022_2 <- `colnames<-`(valstis2022_2, c("pkt.2020", "teritorija"))
valstis2022_2 <- as.data.frame(valstis2022_2)
valstis2022_2$teritorija <- str_remove_all(valstis2022_2$teritorija, ";")
valstis2022_2$teritorija <- str_remove_all(valstis2022_2$teritorija, ".")
view(valstis2022_2)
url4 <- "https://m.likumi.lv/doc.php?id=338298"
# Use rvest to scrape the website and extract the relevant text
webpage4 <- read_html(url4)
text4 <- webpage4 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text4)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2022_2 <- str_extract_all(text4, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2022_2 <- valstis2022_2[7:18]
# split into 2 columns based on space
valstis2022_2 <- str_split_fixed(valstis2022_2, " ", 2)
# assign new column names
valstis2022_2 <- `colnames<-`(valstis2022_2, c("pkt.2020", "teritorija"))
valstis2022_2 <- as.data.frame(valstis2022_2)
valstis2022_2$teritorija <- str_remove_all(valstis2022_2$teritorija, ";")
# valstis2022_2$teritorija <- str_remove_all(valstis2022_2$teritorija, ".")
view(valstis2022_2)
valstis2022_2$teritorija <- str_remove_all(valstis2022_2$teritorija, ".\"")
view(valstis2022_2)
valstis2020$teritorija <- str_remove_all(valstis2020$teritorija, ";")
valstis2020$teritorija <- str_remove_all(valstis2020$teritorija, ".\"")
view(valstis2020)
valstis2020$teritorija <- str_remove_all(valstis2020$teritorija, ".")
view(valstis2020)
webpage3 <- read_html(url3)
text3 <- webpage3 %>%
html_nodes("div p") %>%
html_text() %>%
str_extract("^([0-9]+)\\.([0-9]+).*")
# str_extract("^\\d+\\.\\d+\\.\\s.*+|\\(|\\)")
# Print the extracted text
cat(text3)
# Extract strings width the pattern of "number(s)-dot-space-string(ends width string)"
valstis2020 <- str_extract_all(text3, pattern = "^([0-9]+)\\.([0-9]+).*") %>%
map_chr(toString)
# filter only jurisdictions
valstis2020 <- valstis2020[3:14]
# use gsub() to add a space after the second dot. In the end semicolon or dot (otherwise the problem width the dot)
valstis2020 <- gsub("(\\..*\\.)(.*;|*.)", "\\1 \\2", valstis2020)
# split into 2 columns based on space
valstis2020 <- str_split_fixed(valstis2020, " ", 2)
# assign new column names
valstis2020 <- `colnames<-`(valstis2020, c("pkt.2020", "teritorija"))
valstis2020 <- as.data.frame(valstis2020)
valstis2020$teritorija <- str_remove_all(valstis2020$teritorija, ";")
valstis2020$teritorija <- str_remove_all(valstis2020$teritorija, "\.")
valstis2020$teritorija <- str_remove_all(valstis2020$teritorija, "\\.")
view(valstis2020)
valstis2022_1 <- valstis2020 %>%
filter(!pkt.2020 %in% c("2.1.", "2.5.", "2.10."))
view(valstis2022_1)
valstis2017$teritorija <- str_remove_all(valstis2017$teritorija, ";")
valstis2017$teritorija <- str_remove_all(valstis2017$teritorija, "\\.")
view(valstis2017)
library(data.table)
teritorijas_kopa <- rbindlist(list(valstis95$teritorija, valstis97$teritorija, valstis2001$teritorija,
valstis2004$teritorija, valstis2010$teritorija, valstis2013$teritorija,
valstis2017$teritorija, valstis2020$teritorija, valstis2022_1$teritorija,
valstis2022_2$teritorija))
teritorijas_unikalas <- unique(teritorijas_kopa)
teritorijas_kopa <- rbindlist(list(valstis95$teritorija, valstis97$teritorija, valstis2001$teritorija,
valstis2004$teritorija, valstis2010$teritorija, valstis2013$teritorija,
valstis2017$teritorija, valstis2020$teritorija, valstis2022_1$teritorija,
valstis2022_2$teritorija))
teritorijas_kopa <- rbindlist(list(valstis95, valstis97, valstis2001,
valstis2004, valstis2010, valstis2013,
valstis2017, valstis2020, valstis2022_1,
valstis2022_2))
View(teritorijas_kopa)
teritorijas_unikalas <- unique(teritorijas_kopa$teritorija)
teritorijas_unikalas <- as.data.drame(unique(teritorijas_kopa$teritorija))
teritorijas_unikalas <- as.Data.drame(unique(teritorijas_kopa$teritorija))
teritorijas_unikalas <- data.drame(unique(teritorijas_kopa$teritorija))
teritorijas_unikalas <- unique(teritorijas_kopa$teritorija)
ter_kop_tab <- teritorijas_kopa %>%
select(teritorija)
View(ter_kop_tab)
ter_unik <- unique(ter_kop_tab)
View(ter_unik)
ter_unik <- unique(ter_kop_tab) %>%
arrange()
ter_unik <- unique(ter_kop_tab) %>%
arrange()
ter_unik <- unique(ter_kop_tab) %>%
arrange(teritorija)
savehistory("~/Library/Mobile Documents/com~apple~CloudDocs/MovedOneDrive/03_Rakstiem Publikacijam Referatiem/32_arzonu_sar_LV/_Rproj/BlacklistJur.Rhistory")
